
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------







export class GuideItem {

    constructor(_json_: any) {
        if (_json_.id === undefined) { throw new Error() }
        this.id = _json_.id
        if (_json_.desc === undefined) { throw new Error() }
        this.desc = _json_.desc
        if (_json_.redirect === undefined) { throw new Error() }
        this.redirect = _json_.redirect
        if (_json_.next === undefined) { throw new Error() }
        this.next = _json_.next
    }

    /**
     * id
     */
    readonly id: number
    /**
     * 描述
     */
    readonly desc: string
    /**
     * 中断重定向
     */
    readonly redirect: number
    /**
     * 下一步引导
     */
    readonly next: number

    resolve(tables:Tables)
    {
        
        
        
        
    }
}





export namespace guide {
export class TbGuide{
    private _dataMap: Map<number, GuideItem>
    private _dataList: GuideItem[]
    constructor(_json_: any) {
        this._dataMap = new Map<number, GuideItem>()
        this._dataList = []
        for(var _json2_ of _json_) {
            let _v: GuideItem
            _v = new GuideItem(_json2_)
            this._dataList.push(_v)
            this._dataMap.set(_v.id, _v)
        }
    }

    getDataMap(): Map<number, GuideItem> { return this._dataMap; }
    getDataList(): GuideItem[] { return this._dataList; }

    get(key: number): GuideItem | undefined { return this._dataMap.get(key); }

    resolve(tables:Tables)
    {
        for(let  data of this._dataList)
        {
            data.resolve(tables)
        }
    }

}
}



type JsonLoader = (file: string) => any

export class Tables {
    private _TbGuide: guide.TbGuide
    get TbGuide(): guide.TbGuide  { return this._TbGuide;}

    constructor(loader: JsonLoader) {
        this._TbGuide = new guide.TbGuide(loader('guide_tbguide'))

        this._TbGuide.resolve(this)
    }
}

